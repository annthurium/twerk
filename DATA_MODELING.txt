DATA MODELING
USE DB FOR THINGS THAT SHOULD BE STORED PERSISTENTLY
Nouns:
	- tweets
		- id (int, primary key)
		- from_user_id(int, foreign key)
		- text(varchar, 140)
		- to_user_id(int, nullable=TRUE)
		- to_user_name(varchar, 50, nullable=TRUE)
		- in_reply_to_status_id(int, nullable=TRUE)
		- time_stamp(timedate)

	- users
		- id(int, primary key)
		- username [@whatever] (varchar, 50)
		- name[Jane Doe] (varchar, 256)
		- profile_image_url(varchar, 256)
		# - followers(list of ints or characters)
		# - following(list of ints or characters)

Things to ponder

- Should I use classes from twitter-python for SQLAlchemy? Probably not, who knows what all the class is doing.

- Will users have to authorize my application? Depends on API rate limiting, the type of info I need, etc.

- error checking for collision when I import tweets into database

- When a user hits "analyze," I will need to check and see if they are already in the user database.
	- if they are, I will need to check for new tweets and paginate them into the database. FUNZIES.

- How far back will Twitter let me get data?

- how to store a list in database. varchar or use postgres?

- keep a list of ideas I have so I an add features later.